{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","delay","step","amount","submitBtn","stepTimer","promises","counterPromise","onClickSubmit","e","setTimeout","clearInterval","value","setInterval","console","log","push","createPromise","position","Math","random","addEventListener","preventDefault"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,qBAC/BE,EAAOH,SAASC,cAAc,oBAC9BG,EAASJ,SAASC,cAAc,sBAChCI,EAAYN,EAAKE,cAAc,UAC/BK,EAAY,KACZC,EAAW,GAEjB,IAAIC,EAAiB,EAQrB,SAASC,EAAcC,GAErBC,WAAW,KACTC,cAAcN,IACZH,EAAKU,MAAQT,EAAOS,OAExBP,EAAYQ,YAAY,KACtBC,QAAQC,IAAIR,GACZA,GAAkB,EAClBD,EAASU,KAAK,UAAYT,IASzBL,EAAKU,OAERE,QAAQC,IAAIT,GAGd,SAASW,EAAcC,EAAUjB,GACTkB,KAAKC,SA9B7BtB,EAAKuB,iBAAiB,SAAUZ,IAC9BA,EAAEa,mBAGJlB,EAAUiB,iBAAiB,QAASb","file":"03-promises.f49d4f91.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=delay]');\nconst step = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\nconst submitBtn = form.querySelector('button');\nconst stepTimer = null;\nconst promises = [];\n\nlet counterPromise = 0;\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n});\n\nsubmitBtn.addEventListener('click', onClickSubmit);\n\nfunction onClickSubmit(e) {\n\n  setTimeout(() => {\n    clearInterval(stepTimer)\n  }, (step.value * amount.value));\n\n  stepTimer = setInterval(() => {\n    console.log(counterPromise);\n    counterPromise += 1\n    promises.push('promise' + counterPromise);\n\n    // createPromise(amount.value, delay.value)\n    //   .then(({ position, delay }) => {\n    //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //   })\n    //   .catch(({ position, delay }) => {\n    //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    //   });\n  }, step.value);\n\n  console.log(promises);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"]}